service: Frichti-Slack

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: python3.6
  environment:
    ORDER_TABLE: ${self:service}-order-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ORDER_TABLE}"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true

functions:
  frichti-slack:
    handler: handler.handler
    memroySize: 128
    timeout: 20
    events:
      - http:
          path: frichti
          method: post
          cors: true

resources:
  Resources:
    FrichtiDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: user_id
            AttributeType: S

          -
            AttributeName: plate_type
            AttributeType: S

        KeySchema:
          -
            AttributeName: user_id
            KeyType: HASH

          -
            AttributeName: plate_type
            KeyType: RANGE

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ORDER_TABLE}